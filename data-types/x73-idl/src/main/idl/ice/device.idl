module ice {

  struct Image {
    sequence<octet, 65530> raster;
    long width;
    long height;
  };

  struct DeviceIdentity {
    string<256> universal_device_identifier; //@key
    string<128> manufacturer;
    string<128> model;
    string<128> serial_number;
    Image icon;
  };
  const string DeviceIdentityTopic = "ice::DeviceIdentity";

  enum ConnectionState {
    Connected,
    Connecting,
    Negotiating,
    Disconnecting,
    Disconnected
  };
    
  enum ConnectionType {
    Serial,
    Simulated,
    Network
  };

  struct DeviceConnectivity {
    string<256> universal_device_identifier; //@key
    ConnectionState state;
    ConnectionType type;
    string<128> info;
    sequence<string<128>, 128> valid_targets;
  };
  
  struct DeviceConnectivityObjective {
   string<256> universal_device_identifier; //@key
    boolean connected;
    string<128> target;
  };
  
  
  const string DeviceConnectivityTopic = "ice::DeviceConnectivity";
  const string DeviceConnectivityObjectiveTopic = "ice::DeviceConnectivityObjective";
  
  // From the ECG Measurement partition
  const long MDC_ECG_ELEC_POTL_I       =  1598;
  const long MDC_ECG_ELEC_POTL_II      =  1599;
  const long MDC_ECG_ELEC_POTL_AVR     =  1600;
  const long MDC_ECG_ELEC_POTL_AVL     =  1601;
  const long MDC_ECG_ELEC_POTL_AVF     =  1602;
  const long MDC_ECG_ELEC_POTL_V1      =  1604;
  const long MDC_ECG_ELEC_POTL_V2      =  1605;
  const long MDC_ECG_ELEC_POTL_V4      =  1606;
  const long MDC_ECG_ELEC_POTL_V5      =  1607;
  const long MDC_ECG_ELEC_POTL_V6      =  1608;
  const long MDC_ECG_ELEC_POTL_III     =  1616;
  const long MDC_ECG_ELEC_POTL_V3      =  1637;
  
  const long MDC_PULS_RATE             = 18442;
  const long MDC_PULS_RATE_NON_INV     = 18474;
  const long MDC_BLD_PULS_RATE_INV     = 18450;
  const long MDC_PULS_OXIM_PULS_RATE   = 18458;
  const long MDC_PRESS_BLD             = 18944;
  const long MDC_PRESS_BLD_SYS         = 18945;
  const long MDC_PRESS_BLD_DIA         = 18946;
  const long MDC_PRESS_BLD_MEAN        = 18947;
  const long MDC_PRESS_BLD_NONINV_DIA  = 18950;
  const long MDC_PRESS_BLD_NONINV_MEAN = 18951;
  
  const long MDC_PRESS_CUFF            = 19228;
  const long MDC_PRESS_CUFF_SYS        = 19229;
  const long MDC_PRESS_CUFF_DIA        = 19230;
  const long MDC_PRESS_CUFF_MEAN       = 19231;
  const long MDC_PULS_OXIM_PLETH       = 19380;
  const long MDC_PULS_OXIM_SAT_O2      = 19384;
  const long MDC_RESP_RATE             = 20490;
  const long MDC_CO2_RESP_RATE         = 20522;
  const long MDC_CONC_AWAY_CO2         = 20628;
  const long MDC_VENT_CONC_AWAY_O2     = 20648;
  const long MDC_AWAY_CO2_EXP          = 20660;
  const long MDC_FLOW_AWAY             = 20692;
  const long MDC_PRESS_AWAY            = 20720;
  const long MDC_TIME_PD_APNEA         = 20784;
  const long MDC_VENT_TIME_PD_PPV      = 21344;
  const long MDC_FLOW_O2_CONSUMP       = 21348;
  const long MDC_TEMP_BLD              = 57364;

  
  // SPECULATIVE
  const long MDC_PRESS_CUFF_NEXT_INFLATION = 65536;
  const long MDC_PRESS_CUFF_INFLATION = 65537;
  

  const long MDC_HR_ECG_MODE = 65538;
  const long MDC_RR_APNEA = 65539;
  const long MDC_SPO2_C_LOCK = 65540;
  const long MDC_TIME_PD_INSPIRATORY = 65547;
  const long MDC_TIME_MSEC_SINCE_EPOCH = 65548;
  const long MDC_CAPNOGRAPH = 65549;
  
  module oridion {
    const long MDC_FAST_STATUS = 66000; 
    const long MDC_SLOW_STATUS = 66001;
    const long MDC_CO2_ACTIVE_ALARMS = 66002;
    const long MDC_SPO2_ACTIVE_ALARMS = 66003;
    const long MDC_EXTENDED_CO2_STATUS = 66004;
  };
  
  
  const long MDC_EVT_STAT_NBP_DEFL_AND_MEAS_BP = 6250;
  const long MDC_EVT_STAT_NBP_INFL_TO_MAX_CUFF_PRESS = 6222;
  const long MDC_EVT_STAT_OFF = 6226;
  
  struct Numeric {
    string<256> universal_device_identifier; //@key
    long name; //@key
    float value;
  };
  const string NumericTopic = "ice::Numeric";
  
  struct SampleArray {
    string<256> universal_device_identifier; //@key
    long name; //@key
    sequence<float,400> values;
    long millisecondsPerSample;
  };
  const string SampleArrayTopic = "ice::SampleArray";
  
  struct Text {
    string<256> universal_device_identifier; //@key
    long name; //@key
    string<256> value;
  };
  const string TextTopic = "ice::Text";
};