<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util-4.1.xsd">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="order"                    value="1"/>
        <property name="ignoreResourceNotFound"   value="true"/>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="locations">
            <list>
                <value>classpath:/ice.properties</value>
            </list>
        </property>
    </bean>    

    <!-- ice.properties specified via import -->
    <import resource="classpath:DriverContext.xml"/>
        
    <bean id="refreshScheduler" class="java.util.concurrent.Executors"
          factory-method="newSingleThreadScheduledExecutor"
          destroy-method="shutdownNow">
    </bean>

    <bean id="supervisorUdi" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.mdpnp.devices.simulation.AbstractSimulatedDevice.randomUDI"/>
    </bean>
    
    <!-- This is only needed when PCA apps are installed -->
    <bean id="objectiveWriter" class="org.mdpnp.rtiapi.data.InfusionObjectiveDataWriterFactory" lazy-init="true">
        <constructor-arg ref="publisher" />
        <constructor-arg ref="domainParticipant" />
    </bean>
    
    <bean id="timeManager" class="org.mdpnp.devices.TimeManagerFactory" lazy-init="true">
      <property name="executor" ref="refreshScheduler"/>
      <property name="eventLoop" ref="eventLoop"/>
      <property name="publisher" ref="publisher" />
      <property name="subscriber" ref="subscriber" />
      <property name="uniqueDeviceIdentifier" ref="supervisorUdi" />
      <property name="type">
        <value type="java.lang.String">Supervisor</value>
      </property>
    </bean>
    
    <bean id="numericList" class="org.mdpnp.apps.fxbeans.NumericFxListFactory" lazy-init="false">
        <property name="topicName"><util:constant static-field="ice.NumericTopic.VALUE"/></property>
        <property name="subscriber" ref="subscriber"/>
        <property name="eventLoop" ref="eventLoop"/>
        <property name="qosLibrary"><value>ice_library</value></property>
        <property name="qosProfile"><value>numeric_data</value></property>
    </bean>
    
    <bean id="sampleArrayList" class="org.mdpnp.apps.fxbeans.SampleArrayFxListFactory" lazy-init="false">
        <property name="topicName"><util:constant static-field="ice.SampleArrayTopic.VALUE"/></property>
        <property name="subscriber" ref="subscriber"/>
        <property name="eventLoop" ref="eventLoop"/>
        <property name="qosLibrary"><value>ice_library</value></property>
        <property name="qosProfile"><value>waveform_data</value></property>
    </bean>    
    
    <bean id="infusionStatusList" class="org.mdpnp.apps.fxbeans.InfusionStatusFxListFactory" lazy-init="false">
        <property name="topicName"><util:constant static-field="ice.InfusionStatusTopic.VALUE"/></property>
        <property name="subscriber" ref="subscriber"/>
        <property name="eventLoop" ref="eventLoop"/>
        <property name="qosLibrary"><value>ice_library</value></property>
        <property name="qosProfile"><value>state</value></property>
    </bean>        
    
    <bean id="deviceListModel" class="org.mdpnp.apps.testapp.DeviceListModelFactory" lazy-init="true">
        <constructor-arg ref="eventLoop" />
        <constructor-arg ref="subscriber" />
        <constructor-arg ref="timeManager" />
    </bean>    

    <bean id="vitalModel" class="org.mdpnp.apps.testapp.vital.VitalModelFactory" lazy-init="true">
        <constructor-arg ref="deviceListModel" />
        <constructor-arg ref="publisher" />
        <constructor-arg ref="eventLoop" />
        <constructor-arg ref="numericList"/>
    </bean>
    
    <bean id="fhirContext" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="ca.uhn.fhir.context.FhirContext.forDstu2"/>
    </bean>
    
    <bean id="jdbcDB"
          class="org.mdpnp.apps.testapp.patient.PatientApplicationFactory.EmbeddedDB"
          init-method="init"
          destroy-method="shutdown">
        <property name="schemaDef" value="DbSchema.sql"/>
        <property name="dataDef"   value="DataBootstrap.sql"/>
    </bean>

    <!--
        Create a handle to EMR system. Passing fhir url will make it talk to a
        real server; if not specified, will create a in-memory SQL-based
        implementation.
    -->
    <bean id="emr"
          class="org.mdpnp.apps.testapp.patient.EMRFacade.EMRFacadeFactory">
        <property name="url"         value="${mdpnp.fhir.url}"/>
        <property name="jdbcDB"      ref="jdbcDB"/>
        <property name="fhirContext" ref="fhirContext"/>
    </bean>        

</beans>